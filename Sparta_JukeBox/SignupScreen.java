/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sparta_jukeboxapp;

import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;




/**
 *
 * @author User
 */
public class SignupScreen extends javax.swing.JFrame {

     // Database connection details (replace with your actual values)
    private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DB_URL = "jdbc:mysql://localhost/sparta_player";
    private static final String USER = "root";
    private static final String PASSWORD = "";

    private PreparedStatement preparedStatement;
    private Connection connection;
    /**
     * Creates new form SignupScreen
     */
    public SignupScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        enterName_label = new javax.swing.JLabel();
        enterUsername_label = new javax.swing.JLabel();
        enterEmail_label = new javax.swing.JLabel();
        enterContact_label = new javax.swing.JLabel();
        enterPassword_label = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        enterPin_label = new javax.swing.JLabel();
        password_field = new javax.swing.JPasswordField();
        pin_field = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        username_field = new javax.swing.JTextField();
        email_field = new javax.swing.JTextField();
        name_field = new javax.swing.JTextField();
        contact_field = new javax.swing.JTextField();
        show_rbtn = new javax.swing.JRadioButton();
        submit_btn = new javax.swing.JButton();
        clear_btn = new javax.swing.JButton();
        return_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(190, 173, 150));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(228, 226, 223));

        enterName_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterName_label.setForeground(new java.awt.Color(0, 0, 0));
        enterName_label.setText("Enter Your Name");

        enterUsername_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterUsername_label.setForeground(new java.awt.Color(0, 0, 0));
        enterUsername_label.setText("Enter Your Username");

        enterEmail_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterEmail_label.setForeground(new java.awt.Color(0, 0, 0));
        enterEmail_label.setText("Enter Your Email");

        enterContact_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterContact_label.setForeground(new java.awt.Color(0, 0, 0));
        enterContact_label.setText("Enter Your Contact");

        enterPassword_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterPassword_label.setForeground(new java.awt.Color(0, 0, 0));
        enterPassword_label.setText("Enter Your Password");

        jLabel7.setFont(new java.awt.Font("Maiandra GD", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Confirm Your Password");

        enterPin_label.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        enterPin_label.setForeground(new java.awt.Color(0, 0, 0));
        enterPin_label.setText("Enter A PIN");

        show_rbtn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        show_rbtn.setForeground(new java.awt.Color(0, 0, 0));
        show_rbtn.setText("Show");
        show_rbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_rbtnActionPerformed(evt);
            }
        });

        submit_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        submit_btn.setForeground(new java.awt.Color(0, 0, 0));
        submit_btn.setText("Submit");
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });

        clear_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        clear_btn.setForeground(new java.awt.Color(0, 0, 0));
        clear_btn.setText("Clear");
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });

        return_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        return_btn.setForeground(new java.awt.Color(0, 0, 0));
        return_btn.setText("Return");
        return_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterUsername_label)
                            .addComponent(jLabel7)
                            .addComponent(enterName_label)
                            .addComponent(enterEmail_label)
                            .addComponent(enterContact_label)
                            .addComponent(enterPin_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(email_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                        .addComponent(username_field, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(name_field, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(contact_field))
                                    .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(show_rbtn))
                                .addGap(14, 14, 14)))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterPassword_label)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(submit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(return_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterName_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enterUsername_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterEmail_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contact_field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterContact_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(enterPin_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterPassword_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(show_rbtn)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submit_btn)
                            .addComponent(clear_btn)
                            .addComponent(return_btn))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 490, 540));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/sparta_jukebox-removebg-preview (1).png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void return_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_btnActionPerformed
       // Dispose the current frame
        dispose();
        // Open Login Screen
                    LoginScreen LoginScreen = new LoginScreen(); 
                    LoginScreen.setVisible(true);
    }//GEN-LAST:event_return_btnActionPerformed

    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
         // Clear the data in the text fields
    name_field.setText("");
    username_field.setText("");
    email_field.setText("");
    password_field.setText("");
    pin_field.setText("");
    contact_field.setText("");

    JOptionPane.showMessageDialog(null, "Data Has  Been Cleared !!");
    }//GEN-LAST:event_clear_btnActionPerformed

    private static final String AES_KEY = "aesEncryptionKey";
    
   private String encryptPassword(String value) {
    try {
        Key key = generateKey();
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encryptedByteValue = cipher.doFinal(value.getBytes(StandardCharsets.UTF_8));
        return Base64.getEncoder().encodeToString(encryptedByteValue);
    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }
}

// Modify the decryptPassword method to handle Base64 decoding errors
private String decryptPassword(String encryptedPassword) {
    String decryptedPassword = "";
    try {
        // Validate input for Base64 decoding
        if (encryptedPassword != null && !encryptedPassword.isEmpty()) {
            // Trim any leading or trailing whitespace
            encryptedPassword = encryptedPassword.trim();
            // Decode the Base64 encoded password
            byte[] decodedBytes = Base64.getDecoder().decode(encryptedPassword);
            decryptedPassword = new String(decodedBytes, StandardCharsets.UTF_8);
        } else {
            // Handle empty or null input
            System.out.println("Error: Encrypted password is empty or null.");
            // You can throw an exception or return a default value here as needed
        }
    } catch (IllegalArgumentException e) {
        // Handle the Illegal base64 character exception
        System.out.println("Error decoding Base64 password: " + e.getMessage());
        // You can provide feedback to the user or log the error
        // Example: JOptionPane.showMessageDialog(this, "Error decoding password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    return decryptedPassword;
}

private Key generateKey() throws Exception {
    byte[] keyValue = AES_KEY.getBytes(StandardCharsets.UTF_8);
    return new SecretKeySpec(keyValue, "AES");
}
    
    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
        
         // Get user input from text fields
                String name = name_field.getText();
                String username = username_field.getText();
                String email = email_field.getText();
                String contact = contact_field.getText();
                String pin = pin_field.getText();
                String password = new String(password_field.getPassword()); // Convert char[] to String
                
    // Validate PIN
    if (!validatePIN(pin)) {
        JOptionPane.showMessageDialog(null, "PIN must be a 5-digit number.");
        return;
    }

    // Validate password
    if (!validatePassword(password)) {
        JOptionPane.showMessageDialog(null, "Password must be at least 12 characters long and contain a combination of uppercase letters, lowercase letters, numbers, and symbols.");
        return;
    }

    // Validate contact
    if (!validateContact(contact)) {
        JOptionPane.showMessageDialog(null, "Contact must be a 10-digit number.");
        return;
    }

        try {
        // Encrypt password using AES encryption
        String encryptedPassword = encryptPassword(password);

        //Add Inputs to the Users Table
            connection = DriverManager.getConnection("jdbc:mysql://localhost/sparta_player", "root", "");
            String sql = "INSERT INTO users (username, password, email, name, pin, contact) VALUES (?, ?, ?, ?, ?, ?)";
        preparedStatement = connection.prepareStatement(sql);
        preparedStatement.setString(1, username);
        preparedStatement.setString(2, encryptedPassword); //store password
        preparedStatement.setString(3, email);
        preparedStatement.setString(4, name);
        preparedStatement.setString(5, pin);
        preparedStatement.setString(6, contact);

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "User registered successfully!");
        clearFields(); // Clear fields after successful registration

        // Open Music Player GUI and dispose current frame
        MusicPlayer_GUI MusicPlayer_GUI = new MusicPlayer_GUI();
        MusicPlayer_GUI.setVisible(true);

        // Dispose the current frame
        dispose();
    } else {
        JOptionPane.showMessageDialog(null, "Failed to register user. Please try again.");
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}
    }//GEN-LAST:event_submit_btnActionPerformed

    private void show_rbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_rbtnActionPerformed
           // Toggle the visibility of the password field and change the text of the radio button
    if (show_rbtn.isSelected()) {
        // Show the password
        password_field.setEchoChar((char)0); 
        // Change the text of the radio button to "Hide"
        show_rbtn.setText("Hide");
    } else {
        // Hide the password
        password_field.setEchoChar('*');
        // Change the text of the radio button to "Show"
        show_rbtn.setText("Show");
    }
        
    }//GEN-LAST:event_show_rbtnActionPerformed

    //This method is used for clearing fields
 private void clearFields() {
    // Clear the data in the text fields
    name_field.setText("");
    username_field.setText("");
    email_field.setText("");
    password_field.setText("");
    pin_field.setText("");
    contact_field.setText("");
    }
    
//This method is to check the PIN entered is a 5 digit number 
private boolean validatePIN(String pin) {
    return pin.matches("\\d{5}");
}

//This method is for email validation
private boolean validatePassword(String password) {
    return password.matches("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{12,}$");
}

//This method is used for contact validation and it should be a 10 digit number
private boolean validateContact(String contact) {
    return contact.matches("\\d{10}");
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignupScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear_btn;
    private javax.swing.JTextField contact_field;
    private javax.swing.JTextField email_field;
    private javax.swing.JLabel enterContact_label;
    private javax.swing.JLabel enterEmail_label;
    private javax.swing.JLabel enterName_label;
    private javax.swing.JLabel enterPassword_label;
    private javax.swing.JLabel enterPin_label;
    private javax.swing.JLabel enterUsername_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JTextField name_field;
    private javax.swing.JPasswordField password_field;
    private javax.swing.JPasswordField pin_field;
    private javax.swing.JButton return_btn;
    private javax.swing.JRadioButton show_rbtn;
    private javax.swing.JButton submit_btn;
    private javax.swing.JTextField username_field;
    // End of variables declaration//GEN-END:variables
}
