/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sparta_jukeboxapp;

import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
import org.apache.commons.codec.binary.Base64;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.DriverManager;

/**
 *
 * @author Chris
 */
public class ForgetScreen extends javax.swing.JFrame {

     // Database connection details (replace with your actual values)
    private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DB_URL = "jdbc:mysql://localhost/sparta_player";
    private static final String USER = "root";
    private static final String PASSWORD = "";

    private PreparedStatement preparedStatement;
    private Connection connection;
    /**
     * Creates new form ForgetScreen
     */
    public ForgetScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        enterEmail_label = new javax.swing.JLabel();
        email_field = new javax.swing.JTextField();
        mailIcon_label = new javax.swing.JLabel();
        pinIcon_label = new javax.swing.JLabel();
        pin_field = new javax.swing.JTextField();
        enterPin_label = new javax.swing.JLabel();
        passwordIcon_label = new javax.swing.JLabel();
        enterPassword_label = new javax.swing.JLabel();
        password_field = new javax.swing.JPasswordField();
        passwordIcon2_label = new javax.swing.JLabel();
        password2_field = new javax.swing.JPasswordField();
        enterPassword2_label = new javax.swing.JLabel();
        show_rbtn = new javax.swing.JRadioButton();
        submit_btn = new javax.swing.JButton();
        return_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(190, 173, 150));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(228, 226, 223));

        enterEmail_label.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        enterEmail_label.setForeground(new java.awt.Color(0, 0, 0));
        enterEmail_label.setText("Enter Email Address");

        mailIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/email.png"))); // NOI18N

        pinIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/PIN.png"))); // NOI18N

        enterPin_label.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        enterPin_label.setForeground(new java.awt.Color(0, 0, 0));
        enterPin_label.setText("Enter New PIN");

        passwordIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/password.png"))); // NOI18N

        enterPassword_label.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        enterPassword_label.setForeground(new java.awt.Color(0, 0, 0));
        enterPassword_label.setText("Enter Your New Password");

        passwordIcon2_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/password.png"))); // NOI18N

        enterPassword2_label.setFont(new java.awt.Font("MS PGothic", 1, 14)); // NOI18N
        enterPassword2_label.setForeground(new java.awt.Color(0, 0, 0));
        enterPassword2_label.setText("Confirm Your New Password");

        show_rbtn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        show_rbtn.setForeground(new java.awt.Color(0, 0, 0));
        show_rbtn.setText("Show");
        show_rbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_rbtnActionPerformed(evt);
            }
        });

        submit_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        submit_btn.setForeground(new java.awt.Color(0, 0, 0));
        submit_btn.setText("Submit");
        submit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_btnActionPerformed(evt);
            }
        });

        return_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        return_btn.setForeground(new java.awt.Color(0, 0, 0));
        return_btn.setText("Return");
        return_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(show_rbtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(passwordIcon2_label)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(password2_field)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(enterPassword2_label, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(mailIcon_label)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterEmail_label, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(pinIcon_label)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterPin_label, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(passwordIcon_label)
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterPassword_label, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(submit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(return_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(mailIcon_label))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterEmail_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterPin_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(pinIcon_label, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(passwordIcon_label))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterPassword_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password_field)))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(passwordIcon2_label))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterPassword2_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password2_field)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(show_rbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit_btn)
                    .addComponent(return_btn))
                .addGap(21, 21, 21))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 480, 480));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/sparta_jukebox-removebg-preview (1).png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private static final String AES_KEY = "aesEncryptionKey";
    
    private String encryptPassword(String value) {
    try {
        Key key = generateKey();
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encryptedByteValue = cipher.doFinal(value.getBytes(StandardCharsets.UTF_8));
        return java.util.Base64.getEncoder().encodeToString(encryptedByteValue);
    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }
}

// Modify the decryptPassword method to handle Base64 decoding errors
private String decryptPassword(String encryptedPassword) {
    String decryptedPassword = "";
    try {
        // Validate input for Base64 decoding
        if (encryptedPassword != null && !encryptedPassword.isEmpty()) {
            // Trim any leading or trailing whitespace
            encryptedPassword = encryptedPassword.trim();
            // Decode the Base64 encoded password
            byte[] decodedBytes = java.util.Base64.getDecoder().decode(encryptedPassword);
            decryptedPassword = new String(decodedBytes, StandardCharsets.UTF_8);
        } else {
            // Handle empty or null input
            System.out.println("Error: Encrypted password is empty or null.");
            // You can throw an exception or return a default value here as needed
        }
    } catch (IllegalArgumentException e) {
        // Handle the Illegal base64 character exception
        System.out.println("Error decoding Base64 password: " + e.getMessage());
        // You can provide feedback to the user or log the error
        // Example: JOptionPane.showMessageDialog(this, "Error decoding password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    return decryptedPassword;
}

private Key generateKey() throws Exception {
    byte[] keyValue = AES_KEY.getBytes(StandardCharsets.UTF_8);
    return new SecretKeySpec(keyValue, "AES");
}

    
    private void return_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_btnActionPerformed
         // Dispose the current frame
        dispose();
        // Open Login Screen
                    LoginScreen LoginScreen = new LoginScreen(); 
                    LoginScreen.setVisible(true);
    }//GEN-LAST:event_return_btnActionPerformed

    private void show_rbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_rbtnActionPerformed
         // Toggle the visibility of the password field and change the text of the radio button
    if (show_rbtn.isSelected()) {
        // Show the password
        password_field.setEchoChar((char)0); 
        password2_field.setEchoChar((char)0);
        // Change the text of the radio button to "Hide"
        show_rbtn.setText("Hide");
    } else {
        // Hide the password
        password_field.setEchoChar('*');
        password2_field.setEchoChar('*');
        // Change the text of the radio button to "Show"
        show_rbtn.setText("Show");
    } 
    }//GEN-LAST:event_show_rbtnActionPerformed

    private void submit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_btnActionPerformed
          // Get user inputs
    String email = email_field.getText();
    String pin = pin_field.getText();
    String password = new String(password_field.getPassword());
    String confirmPassword = new String(password2_field.getPassword());

    // Check if all fields are filled
    if (email.isEmpty() || pin.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if passwords match
    if (!password.equals(confirmPassword)) {
        JOptionPane.showMessageDialog(this, "Passwords do not match. Please re-enter.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if the email exists in the database
    try {
        Class.forName(JDBC_DRIVER);
        connection = DriverManager.getConnection(DB_URL, USER, PASSWORD);
        String query = "SELECT * FROM users WHERE email = ?";
        preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, email);
        ResultSet resultSet = preparedStatement.executeQuery();

        if (!resultSet.next()) {
            // User does not exist, prompt to sign up
            JOptionPane.showMessageDialog(this, "User with this email does not exist. Please sign up.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Update user's information in the database
        String updateQuery = "UPDATE users SET pin = ?, password = ? WHERE email = ?";
        preparedStatement = connection.prepareStatement(updateQuery);
        preparedStatement.setString(1, pin);
        
        // Encrypt the password before storing it in the database
        String encryptedPassword = encryptPassword(password);
        preparedStatement.setString(2, encryptedPassword);
        preparedStatement.setString(3, email);

        int rowsAffected = preparedStatement.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Password updated successfully.");
            dispose();
            // Open Login Screen
            LoginScreen loginScreen = new LoginScreen(); 
            loginScreen.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        try {
            if (preparedStatement != null) {
                preparedStatement.close();
            }
            if (connection != null) {
                connection.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_submit_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgetScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgetScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField email_field;
    private javax.swing.JLabel enterEmail_label;
    private javax.swing.JLabel enterPassword2_label;
    private javax.swing.JLabel enterPassword_label;
    private javax.swing.JLabel enterPin_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel mailIcon_label;
    private javax.swing.JPasswordField password2_field;
    private javax.swing.JLabel passwordIcon2_label;
    private javax.swing.JLabel passwordIcon_label;
    private javax.swing.JPasswordField password_field;
    private javax.swing.JLabel pinIcon_label;
    private javax.swing.JTextField pin_field;
    private javax.swing.JButton return_btn;
    private javax.swing.JRadioButton show_rbtn;
    private javax.swing.JButton submit_btn;
    // End of variables declaration//GEN-END:variables
}
