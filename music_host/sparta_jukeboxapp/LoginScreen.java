/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sparta_jukeboxapp;

import java.nio.charset.StandardCharsets;
import java.sql.ResultSet;
import java.security.Key;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;



/**
 *
 * @author Chris
 */
public class LoginScreen extends javax.swing.JFrame {
    private ResultSet resultSet;
 // Database connection details
    private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DB_URL = "jdbc:mysql://localhost/sparta_player";
    private static final String USER = "root";
    private static final String PASSWORD = "";

    private PreparedStatement preparedStatement;
    private Connection connection;
    
    private static final String AES_KEY = "aesEncryptionKey";
    
    private String encryptPassword(String value) {
    try {
        Key key = generateKey();
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encryptedByteValue = cipher.doFinal(value.getBytes(StandardCharsets.UTF_8));
        return Base64.getEncoder().encodeToString(encryptedByteValue);
    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }
}

// Modify the decryptPassword method to handle Base64 decoding errors
private String decryptPassword(String encryptedPassword) {
    String decryptedPassword = "";
    try {
        // Validate input for Base64 decoding
        if (encryptedPassword != null && !encryptedPassword.isEmpty()) {
            // Trim any leading or trailing whitespace
            encryptedPassword = encryptedPassword.trim();
            // Decode the Base64 encoded password
            byte[] decodedBytes = Base64.getDecoder().decode(encryptedPassword);
            decryptedPassword = new String(decodedBytes, StandardCharsets.UTF_8);
        } else {
            // Handle empty or null input
            System.out.println("Error: Encrypted password is empty or null.");
            // You can throw an exception or return a default value here as needed
        }
    } catch (IllegalArgumentException e) {
        // Handle the Illegal base64 character exception
        System.out.println("Error decoding Base64 password: " + e.getMessage());
        // You can provide feedback to the user or log the error
        // Example: JOptionPane.showMessageDialog(this, "Error decoding password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    return decryptedPassword;
}

private Key generateKey() throws Exception {
    byte[] keyValue = AES_KEY.getBytes(StandardCharsets.UTF_8);
    return new SecretKeySpec(keyValue, "AES");
}
    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        userIcon_label = new javax.swing.JLabel();
        passwordIcon_label = new javax.swing.JLabel();
        username_field = new javax.swing.JTextField();
        password_field = new javax.swing.JPasswordField();
        login_btn = new javax.swing.JButton();
        signup_btn = new javax.swing.JButton();
        forget_btn = new javax.swing.JButton();
        username_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        pinIcon_label = new javax.swing.JLabel();
        pin_field = new javax.swing.JPasswordField();
        pin_label = new javax.swing.JLabel();
        show_rbtn = new javax.swing.JRadioButton();
        logo_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(190, 173, 150));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(228, 226, 223));
        jPanel2.setForeground(new java.awt.Color(228, 226, 223));

        userIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/Icons8-Windows-8-Users-Name.48.png"))); // NOI18N

        passwordIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/password.png"))); // NOI18N

        login_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        login_btn.setForeground(new java.awt.Color(0, 0, 0));
        login_btn.setText("Login");
        login_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnActionPerformed(evt);
            }
        });

        signup_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        signup_btn.setForeground(new java.awt.Color(0, 0, 0));
        signup_btn.setText("Signup");
        signup_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signup_btnActionPerformed(evt);
            }
        });

        forget_btn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        forget_btn.setForeground(new java.awt.Color(0, 0, 0));
        forget_btn.setText("Forget");
        forget_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forget_btnActionPerformed(evt);
            }
        });

        username_label.setBackground(new java.awt.Color(0, 0, 0));
        username_label.setFont(new java.awt.Font("Eras Medium ITC", 1, 14)); // NOI18N
        username_label.setForeground(new java.awt.Color(0, 0, 0));
        username_label.setText("Username / Email");

        password_label.setBackground(new java.awt.Color(0, 0, 0));
        password_label.setFont(new java.awt.Font("Eras Medium ITC", 1, 14)); // NOI18N
        password_label.setForeground(new java.awt.Color(0, 0, 0));
        password_label.setText("Password");

        pinIcon_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/PIN.png"))); // NOI18N

        pin_label.setBackground(new java.awt.Color(0, 0, 0));
        pin_label.setFont(new java.awt.Font("Eras Medium ITC", 1, 14)); // NOI18N
        pin_label.setForeground(new java.awt.Color(0, 0, 0));
        pin_label.setText("PIN");

        show_rbtn.setFont(new java.awt.Font("Malgun Gothic", 1, 12)); // NOI18N
        show_rbtn.setForeground(new java.awt.Color(0, 0, 0));
        show_rbtn.setText("Show");
        show_rbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_rbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(login_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(signup_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(forget_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pinIcon_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordIcon_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pin_label, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(userIcon_label)
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username_field)))
                    .addComponent(show_rbtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userIcon_label)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pinIcon_label)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pin_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pin_field, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(passwordIcon_label))
                .addGap(18, 18, 18)
                .addComponent(show_rbtn)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login_btn)
                    .addComponent(signup_btn)
                    .addComponent(forget_btn))
                .addGap(24, 24, 24))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 380, 340));

        logo_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sparta_jukeboxapp/images/sparta_jukebox-removebg-preview (1).png"))); // NOI18N
        logo_label.setText("jLabel1");
        jPanel1.add(logo_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, 20, 360, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void show_rbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_rbtnActionPerformed
       // Toggle the visibility of the password field and change the text of the radio button
    if (show_rbtn.isSelected()) {
        // Show the password
        password_field.setEchoChar((char)0); 
        // Change the text of the radio button to "Hide"
        show_rbtn.setText("Hide");
    } else {
        // Hide the password
        password_field.setEchoChar('*');
        // Change the text of the radio button to "Show"
        show_rbtn.setText("Show");
    }     
    }//GEN-LAST:event_show_rbtnActionPerformed

   private void loginUser(String username, String enteredPassword, String enteredPIN) {
    try {
        connection = DriverManager.getConnection(DB_URL, USER, PASSWORD);
        String query = "SELECT password, pin, user_type FROM users WHERE username = ? OR email = ?";
        preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, username);
        preparedStatement.setString(2, username);

        resultSet = preparedStatement.executeQuery();

        if(resultSet.next()) {
            String encryptedPasswordFromDB = resultSet.getString("password");
            String decryptedPasswordFromDB = decryptPassword(encryptedPasswordFromDB); // Decrypt password from database
            String pinFromDB = resultSet.getString("pin");
            int userType = resultSet.getInt("user_type");

        if(decryptedPasswordFromDB != null && decryptedPasswordFromDB.equals(enteredPassword) && pinFromDB != null && pinFromDB.equals(enteredPIN)) {
    // Authentication successful
    if(userType == 3) {
        // Redirection logic for MusicPlayer
         // Dispose the current frame
        dispose();
        // Open Music Player Screen
                    MusicPlayer_GUI MusicPlayer_GUI = new MusicPlayer_GUI(); 
                    MusicPlayer_GUI.setVisible(true);
    } else if(userType == 1 || userType == 2) {
        // Redirection logic for AdminHomeScreen
          // Dispose the current frame
        dispose();
        // Open Admin Home screen Screen
                    AdminHomeScreen AdminHomeScreen = new AdminHomeScreen(); 
                    AdminHomeScreen.setVisible(true);
    } else {  
        JOptionPane.showMessageDialog(this, "Invalid user_type for this user.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Incorrect username/email, password, or PIN.", "Error", JOptionPane.ERROR_MESSAGE);
}
        } else {
            JOptionPane.showMessageDialog(this, "User not found. Please sign up.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch(Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        try {
            if(resultSet != null) resultSet.close();
            if(preparedStatement != null) preparedStatement.close();
            if(connection != null) connection.close();
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(this, "Error in closing resources: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
}
    
    private void login_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnActionPerformed
   // Get User inputs
    String username = username_field.getText();
    String enteredPassword = new String(password_field.getPassword());
    String enteredPIN = new String(pin_field.getPassword());

    // Validate that all fields are filled
    if (username.isEmpty() || enteredPIN.isEmpty() || enteredPassword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Call loginUser function to authenticate user
    loginUser(username, enteredPassword, enteredPIN);
   
    }//GEN-LAST:event_login_btnActionPerformed

    private void signup_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signup_btnActionPerformed
        // Dispose the current frame
        dispose();
        // Open Signup Screen
                    SignupScreen SignupScreen = new SignupScreen(); 
                    SignupScreen.setVisible(true);
    }//GEN-LAST:event_signup_btnActionPerformed

    private void forget_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forget_btnActionPerformed
         // Dispose the current frame
        dispose();
        // Open Forget Screen
                    ForgetScreen ForgetScreen = new ForgetScreen(); 
                    ForgetScreen.setVisible(true);
    }//GEN-LAST:event_forget_btnActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton forget_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton login_btn;
    private javax.swing.JLabel logo_label;
    private javax.swing.JLabel passwordIcon_label;
    private javax.swing.JPasswordField password_field;
    private javax.swing.JLabel password_label;
    private javax.swing.JLabel pinIcon_label;
    private javax.swing.JPasswordField pin_field;
    private javax.swing.JLabel pin_label;
    private javax.swing.JRadioButton show_rbtn;
    private javax.swing.JButton signup_btn;
    private javax.swing.JLabel userIcon_label;
    private javax.swing.JTextField username_field;
    private javax.swing.JLabel username_label;
    // End of variables declaration//GEN-END:variables
}
